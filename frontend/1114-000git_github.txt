git과 git-hub

제어판-자격증명관리자-windows자격증명 에서 git사용없는것 확인해야. 다른사람으로 로그인돼있으면 아무리해도안됨


맥: x code설치하고 사
용하기

깃 설치
깃 허브 로그인, create repository
바탕화면 새폴더

파일복사해와서 index.html로 이름바꾸기.
도메인만치면들어갈수있도록.

폴더오른쪽마우스 git bash here

git config --global user.name gpdms
git config --global user.email gpdms9737@gmail.com
git config --list
유저네임과 유저이메일 확인하기.

git init

git status

git add . (점은 모든파일을 의미)
git commit -m "first commit" (""정해진이름은 아니고 내가 생성하는것.)
git status
git remote add origin (깃허브홈페이지 repository 복사)
git push origin master
창 뜨면 authentic뭐시기 누르기.
새로고침해보면 index파일 올라가있음.

netlify 깃허브로 로그인
deploy 깃허브 복잡한 주소 간단한 주소로 바꾸겠다
options- edit site name


깃허브에 파일을 올리는 것>> 호스팅 (클라우드 공간을 할당하는것)

넷리파이>> 도메인을 달아주는 역할을 하는 사이트

다시
git add .
git commit -m "second commit"
git push origin master

파일추가하고,
git bash here
git add .
git status로 확인-new file뜨는거 확인.
git commit -m "third-commit" (이름 마음대로)
git push origin master끝. 깃허브에서 확인.


클론만들기
git clone https://github.com/gpdms/1114.git [폴더명]



git add .
git status
git commit -m "777"
git checkout -b 1114
공간을 따로 할당


원래 폴더에서 git bash here
git add .
git status
rm -rf .git ->master가 사라짐
git init -> master가 생김
git checkout -b 1114 -> 1114가 생김
git checkout master
->마스터로 바뀜

master브랜치가 네이버 메인페이지라 생각하자.
깃허브에서 view all branches

브랜치를 만드는 이유: 마스터를 신입이 건들 수 없게. 브랜치에서 작업해서 커밋하도록.



=======================================
git config --global user.name "유저네임"
git config --global user.email "이메일"
-> 로그인을 하게 되는 것

git add .
-> 점은 모든파일을 다 올려버리겠다는 의미.

git status
-> 어떤 파일이 추가되었고 어떤 파일이 수정되었는지 모두 확인

git remote add origin 주소 
-> 해당 리파지터리와 연결이 되는 것.

git commit -m "커밋이름"
-> m은 make약자

git push origin master
-> 여기서 에러가 뜬다면 
rm -rf git. 적기 
->그러면 master에서 벗어나게 됨. 
git init
->다시 초기화. 작업을 반복한다.

git clone 경로주소 [폴더명]

freshman 폴더가 생겼다고 가정.
cd freshman
->체인지 디렉토리
code .
->비주얼스튜디오코드가 열림
git add .
git commit "second commit"
git push origin freshman
그 다음에 깃허브에 second commit으로 변경한 파일이 올라가게 됨.
리더한테 보고가 뜨게 됨. second commit을 freshman이 올렸다 확인해주세요.
리더는 freshman이 올린 파일을 확인해볼 수 있음.
확인 결과 수정이 필요하면 다시하라고 재요청.
컨펌이 나면 pull requests에서 merge pull request. 누르는 순간 master파일과 freshman의 파일이 합쳐짐. 이는 책임을 져야 하는 부분이 생긴다.
======================================







cd ..
-> 한단계 위로










특정 Branch로 이동하기
git checkout {Branch Name}
 

특정 Branch 생성 후 해당 Branch로 이동
git checkout -b {New Branch Name}


git clone [REPO_URL] [DIR]
[REPO_URL]에는 클론해올 저장소의 주소를 지정해줍니다. [DIR] 인자는 저장소를 로컬에 복제할 위치를 지정합니다. [DIR] 생략 가능하며, 특별한 이유가 없다면 보통 생략합니다. 이미 초기화된 원격의 저장소를 복제해와서 개발하는 경우, 복제 작업을 Git에서는 클론(clone)이라고 부름