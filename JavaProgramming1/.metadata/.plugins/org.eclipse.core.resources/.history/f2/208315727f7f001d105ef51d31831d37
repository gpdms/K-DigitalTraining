package project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class DBUpdate {
        Connection conn;
        Statement stmt;
        ResultSet rs;

        String number;
        int seatNum;
        int time;

        // 전화번호 세팅 메소드
        void setNum(String number) {
                this.number = number;
        }

        // 좌석번호 세팅 메소드
        void setSeatNum(int seatNum) {
                this.seatNum = seatNum;
        }

        // 시간 세팅 메소드
        void setTime(int time) {
                this.time = time;
        }

        // 드라이버, DB연결 메소드
        void DBConnect() {
                try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                } catch (ClassNotFoundException e) {
                        e.printStackTrace();
                }
                System.out.println("드라이버 완료");
                try {
                        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/thisisjava", "java", "mysql");
                } catch (SQLException e) {
                        e.printStackTrace();
                }
                System.out.println("접속 완료");
        }

        // 좌석번호 삽입 메소드
        void sUpdate() {
                DBConnect();

                try {
                        stmt = conn.createStatement();
                        int result = stmt
                                        .executeUpdate("update customer set seat ='" + seatNum + "'where number ='" + number + "'");
                        System.out.println(result + "건 입력 성공");
                } catch (SQLException e) {
//         System.out.println("좌석정보 삽입 실패");
                        e.printStackTrace();
                }
                return;
        }

        // 좌석번호 제거 메소드
        void dUpdate() {
                DBConnect();

                try {
                        stmt = conn.createStatement();
                        int result = stmt.executeUpdate("update customer set seat =null where number ='" + number + "'");
                        System.out.println(result + "건 입력 성공");
                } catch (SQLException e) {
                        e.printStackTrace();
                }
        }

        // 시작시간 삽입 메소드
        void stimeUpdate() {
                DBConnect();
                try {
                        stmt = conn.createStatement();
                        int result = stmt
                                        .executeUpdate("update customer set starttime =" + time + " where number ='" + number + "'");
                        System.out.println(result + "건 입력 성공");
                } catch (SQLException e) {
                        e.printStackTrace();
                }
        }

        // 종료시간 삽입 메소드
        void etimeUpdate() {
                DBConnect();
        }

        // 선택된 좌석번호 리턴 메소드
        int SelectSeat() {
                DBConnect();
                try {
                        stmt = conn.createStatement();
                        rs = stmt.executeQuery("SELECT seat from customer where number='" + number + "'");
                        if (rs.next()) {
                                int seatNum = rs.getInt("seat");
                                System.out.println("정보가 1건 존재합니다 좌석번호 :" + seatNum);
                                return seatNum;
                        } else {
                                System.out.println("정보가 존재하지 않습니다.");
                        }

                } catch (SQLException e) {
                        e.printStackTrace();
                }
                return 0;
        }
        
        boolean seatNull() {
        	DBConnect();
        	try {
				stmt = conn.createStatement();
				rs = stmt.executeQuery("SELECT seat from customer where number='" + number + "'");
				if (rs.equals(null)) {
					System.out.println("이용중인 좌석 없음. 좌석선택으로 go");
					return true;
				} else {
					System.out.println("이용중인 좌석 있음. 로그인 실패");
					return false;
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
			return false;
        	
        }
        
        
        //좌석 사용여부 메소드
        List<Integer> SeatNotNull() {
        	DBConnect();
        	List<Integer> listNotNull = new ArrayList<>();
        	
        	try {
				stmt = conn.createStatement();
				rs = stmt.executeQuery("SELECT seat from customer where seat is not null");
				
				
				while(rs.next()) {
					listNotNull.add(rs.getInt("seat"));
//					listNotNull.stream().forEach(s -> System.out.println(s));
				}
				
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
			return listNotNull;
            
        }
        
        public static void main (String[] args) {
        	DBUpdate dbupdate = new DBUpdate();
        	dbupdate.seatNull();
//        	
//        	String a = "2시간 1000원";
//        	System.out.println(a.charAt(0));
        	
//        	System.out.println(dbupdate.SeatNotNull());
        	
        	
        	
        }
}