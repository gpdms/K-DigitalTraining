package chap14_1222;

import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.IntBinaryOperator;
import java.util.function.Supplier;

public class FuncApiEx {

	public static void main(String[] args) {
		
		//Consumer제공된것.: 매개값은 있고, 리턴값은 없음.(void)
		Consumer<String> co = (t) -> { 
			System.out.println(t);
		};
		co.accept("test"); //accept 제공된것
		
		//Supplier: 매개값은 없고, 리턴값은 있음.
		Supplier<String> sp = () -> { 
			System.out.println("test");
			return "test";
		};
		sp.get();
		
		//Function: 매개값도 있고, 리턴값도 있음. 매개값을 리턴값으로 매핑. 지정한 타입으로 리턴.
		Function<String, Integer> f = (x) -> { //String으로 받아서 Integer로 줌. mapping이라고 함.
			return Integer.parseInt(x);
		};
		System.out.println(f.apply("300"));
		
		//Operator: 매개값도 있고, 리턴값도 있음. 매개값을 연산하고 결과를 리턴. 
		IntBinaryOperator op = (x, y) -> {
			return x*y*200;			
		};
		System.out.println(op.applyAsInt(10, 20));
		
		//Predicate: 매개값 있고, 리턴타입은 boolean.
		Predicate<String> pr = s -> {
			return false;
		}
	}

}
